<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Tutorial 3 : Matrices</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free tutorials for modern Opengl (3.3 and later) in C/C++">
    <link rel="canonical" href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-3-matrices/">

    <!-- Custom CSS -->
    <link rel="stylesheet" href="Tutorial%203%20%20%20Matrices_soubory/main.css">
    <link href="Tutorial%203%20%20%20Matrices_soubory/syntax.css" rel="stylesheet">

    <script async="" src="Tutorial%203%20%20%20Matrices_soubory/analytics.js"></script><script>

      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-22633480-2', {'siteSpeedSampleRate': 40});
      ga('send', 'pageview');
      
    </script>
    
</head>


    <body>

    
    <header class="site-header">

  <script>
    String.prototype.replaceAt=function(index, character) {
    return this.substr(0, index) + character + this.substr(index+character.length);
    }
    
    function myFunction() {
    var x = document.getElementById("myLanguage").value
    var pageurl = "/beginners-tutorials/tutorial-3-matrices/"
    if (pageurl.charAt(3) == '/') {
      if(x=='en'){
        pageurl = pageurl.substring(3);
      } else {
        pageurl = pageurl.replaceAt(1, x);
      }
      window.open ('' + pageurl,'_self',false);
    } else { 
      window.open ('/' + x + pageurl,'_self',false);
    }
    
    
    }
  </script>
  
  <div class="wrap">
    
      <a class="site-title" href="http://www.opengl-tutorial.org/">opengl-tutorial</a>
    

    <nav class="site-nav">
      
      <a href="#" class="menu-icon">
        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 18 15" enable-background="new 0 0 18 15" xml:space="preserve">
          <path fill="#505050" d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0
            h15.031C17.335,0,18,0.665,18,1.484L18,1.484z"></path>
          <path fill="#505050" d="M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0c0-0.82,0.665-1.484,1.484-1.484
            h15.031C17.335,6.031,18,6.696,18,7.516L18,7.516z"></path>
          <path fill="#505050" d="M18,13.516C18,14.335,17.335,15,16.516,15H1.484C0.665,15,0,14.335,0,13.516l0,0
            c0-0.82,0.665-1.484,1.484-1.484h15.031C17.335,12.031,18,12.696,18,13.516L18,13.516z"></path>
        </svg>
      </a>

      <ul class="trigger">
        
        

        <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/">Basic tutorials</a>
          <span class="arrow">▼</span>
          <ul class="sub-menu">
            
            
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-1-opening-a-window/">Tutorial 1 : Opening a window</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-2-the-first-triangle/">Tutorial 2 : The first triangle</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-3-matrices/">Tutorial 3 : Matrices</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-4-a-colored-cube/">Tutorial 4 : A Colored Cube</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-5-a-textured-cube/">Tutorial 5 : A Textured Cube</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-6-keyboard-and-mouse/">Tutorial 6 : Keyboard and Mouse</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-7-model-loading/">Tutorial 7 : Model loading</a></li>
                
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-8-basic-shading/">Tutorial 8 : Basic shading</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
          </ul>
        </li>
        <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/">Intermediate tutorials</a>
          <span class="arrow">▼</span>
          <ul class="sub-menu">
            
            
            
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-9-vbo-indexing/">Tutorial 9 : VBO Indexing</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-10-transparency/">Tutorial 10 : Transparency</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-11-2d-text/">Tutorial 11 : 2D text</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-12-opengl-extensions/">Tutorial 12 : OpenGL Extensions</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-13-normal-mapping/">Tutorial 13 : Normal Mapping</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-14-render-to-texture/">Tutorial 14 : Render To Texture</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-15-lightmaps/">Tutorial 15 : Lightmaps</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-16-shadow-mapping/">Tutorial 16 : Shadow mapping</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-17-quaternions/">Tutorial 17 : Rotations</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/billboards-particles/">Tutorial 18 : Billboards &amp; Particles</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                    <span class="arrow">▶</span><ul class="sub-menu">
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/billboards-particles/billboards/">Billboards</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/billboards-particles/particles-instancing/">Particles / Instancing</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
            
              
              </ul></li>
            
          </ul>
        </li>
        <li><a href="http://www.opengl-tutorial.org/miscellaneous/">Miscellaneous</a>
          <span class="arrow">▼</span>
          <ul class="sub-menu">
            
            
            
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/faq/">FAQ</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/contribute/">Contribute</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                    <span class="arrow">▶</span><ul class="sub-menu">
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/contribute/translation/">Translation</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                    </ul></li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/math-cheatsheet/">Math Cheatsheet</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/useful-tools-links/">Useful Tools &amp; Links</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/an-fps-counter/">An FPS counter</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/building-your-own-c-application/">Building your own C application</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/clicking-on-objects/">Clicking on objects</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                    <span class="arrow">▶</span><ul class="sub-menu">
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/clicking-on-objects/picking-with-an-opengl-hack/">Picking with an OpenGL hack</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/clicking-on-objects/picking-with-a-physics-library/">Picking with a physics library</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/clicking-on-objects/picking-with-custom-ray-obb-function/">Picking with custom Ray-OBB function</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
            
              
              </ul></li>
            
          </ul>
        </li>
        <li><a href="http://www.opengl-tutorial.org/download/">Download</a></li>


        <li><select id="myLanguage" onchange="myFunction()">
          
            <option value="en" selected="selected">english</option>	    
          
            <option value="cn">chinese</option>	    
          
            <option value="jp">japanese</option>	    
          
            <option value="ru">russian</option>	    
          
            <option value="fr">français</option>	    
          
	       </select></li>
       </ul>
      </nav></div>
    
  
</header>

    

    <div class="page-content">
      <div class="wrap">
      <div class="post">

  <header class="post-header">
    <h1>Tutorial 3 : Matrices</h1>
  </header>

  <article class="post-content">
  
<blockquote>
  <p><em>The engines don’t move the ship at all. The ship stays where it is and the engines move the universe around it.</em></p>

  <p>Futurama</p>
</blockquote>

<p><strong>This is the single most important tutorial of the whole set. Be sure to read it at least eight times.</strong></p>

<h1 id="homogeneous-coordinates">Homogeneous coordinates</h1>

<p>Until then, we only considered 3D vertices as a (x,y,z) triplet. Let’s introduce w. We will now have (x,y,z,w) vectors.</p>

<p>This will be more clear soon, but for now, just remember this :</p>

<ul>
  <li>If w == 1, then the vector (x,y,z,1) is a position in space.</li>
  <li>If w == 0, then the vector (x,y,z,0) is a direction.</li>
</ul>

<p>(In fact, remember this forever.)</p>

<p>What difference does this make ? Well, for a rotation, it doesn’t 
change anything. When you rotate a point or a direction, you get the 
same result. However, for a translation (when you move the point in a 
certain direction), things are different. What could mean “translate a 
direction” ? Not much.</p>

<p>Homogeneous coordinates allow us to use a single mathematical formula to deal with these two cases.</p>

<h1 id="transformation-matrices">Transformation matrices</h1>

<h2 id="an-introduction-to-matrices">An introduction to matrices</h2>

<p>Simply put, a matrix is an array of numbers with a predefined number 
of rows and colums. For instance, a 2x3 matrix can look like this :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/2X3.png" alt=""></p>

<p>In 3D graphics we will mostly use 4x4 matrices. They will allow us to
 transform our (x,y,z,w) vertices. This is done by multiplying the 
vertex with the matrix :</p>

<p><strong>Matrix x Vertex (in this order !!) = TransformedVertex</strong></p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/MatrixXVect.gif" alt=""></p>

<p>This isn’t as scary as it looks. Put your left finger on the a, and your right finger on the x. This is <em>ax</em>. Move your left finger to the next number (b), and your right finger to the next number (y). You’ve got <em>by</em>. Once again : <em>cz</em>. Once again : <em>dw</em>. ax + by + cz + dw. You’ve got your new x ! Do the same for each line, and you’ll get your new (x,y,z,w) vector.</p>

<p>Now this is quite boring to compute, an we will do this often, so let’s ask the computer to do it instead.</p>

<p><strong>In C++, with GLM:</strong></p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">myMatrix</span><span class="p">;</span>
<span class="n">glm</span><span class="o">::</span><span class="n">vec4</span> <span class="n">myVector</span><span class="p">;</span>
<span class="c1">// fill myMatrix and myVector somehow
</span><span class="n">glm</span><span class="o">::</span><span class="n">vec4</span> <span class="n">transformedVector</span> <span class="o">=</span> <span class="n">myMatrix</span> <span class="o">*</span> <span class="n">myVector</span><span class="p">;</span> <span class="c1">// Again, in this order ! this is important.
</span></code></pre>
</div>

<p><strong>In GLSL :</strong></p>

<div class="language-glsl highlighter-rouge"><pre class="highlight"><code><span class="kt">mat4</span> <span class="n">myMatrix</span><span class="p">;</span>
<span class="kt">vec4</span> <span class="n">myVector</span><span class="p">;</span>
<span class="c1">// fill myMatrix and myVector somehow
</span><span class="kt">vec4</span> <span class="n">transformedVector</span> <span class="o">=</span> <span class="n">myMatrix</span> <span class="o">*</span> <span class="n">myVector</span><span class="p">;</span> <span class="c1">// Yeah, it's pretty much the same than GLM
</span></code></pre>
</div>

<p>( have you cut’n pasted this in your code ? go on, try it)</p>

<h2 id="translation-matrices">Translation matrices</h2>

<p>These are the most simple tranformation matrices to understand. A translation matrix look like this :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/translationMatrix.png" alt=""></p>

<p>where X,Y,Z are the values that you want to add to your position.</p>

<p>So if we want to translate the vector (10,10,10,1) of 10 units in the X direction, we get :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/translationExamplePosition1.png" alt=""></p>

<p>(do it ! doooooo it)</p>

<p>… and we get a (20,10,10,1) homogeneous vector ! Remember, the 1 
means that it is a position, not a direction. So our transformation 
didn’t change the fact that we were dealing with a position, which is 
good.</p>

<p>Let’s now see what happens to a vector that represents a direction towards the -z axis : (0,0,-1,0)</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/translationExampleDirection1.png" alt=""></p>

<p>… ie our original (0,0,-1,0) direction, which is great because as I said ealier, moving a direction does not make sense.</p>

<p>So, how does this translate to code ?</p>

<p><strong>In C++, with GLM:</strong></p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="cp">#include &lt;glm/gtx/transform.hpp&gt; // after &lt;glm/glm.hpp&gt;
</span> 
<span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">myMatrix</span> <span class="o">=</span> <span class="n">glm</span><span class="o">::</span><span class="n">translate</span><span class="p">(</span><span class="mf">10.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>
<span class="n">glm</span><span class="o">::</span><span class="n">vec4</span> <span class="n">myVector</span><span class="p">(</span><span class="mf">10.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">10.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">10.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>
<span class="n">glm</span><span class="o">::</span><span class="n">vec4</span> <span class="n">transformedVector</span> <span class="o">=</span> <span class="n">myMatrix</span> <span class="o">*</span> <span class="n">myVector</span><span class="p">;</span> <span class="c1">// guess the result
</span></code></pre>
</div>

<p><strong>In GLSL :</strong></p>

<div class="language-glsl highlighter-rouge"><pre class="highlight"><code><span class="kt">vec4</span> <span class="n">transformedVector</span> <span class="o">=</span> <span class="n">myMatrix</span> <span class="o">*</span> <span class="n">myVector</span><span class="p">;</span>
</code></pre>
</div>

<p>Well, in fact, you almost never do this in GLSL. Most of the time, 
you use glm::translate() in C++ to compute your matrix, send it to GLSL,
 and do only the multiplication :</p>

<h2 id="the-identity-matrix">The Identity matrix</h2>

<p>This one is special. It doesn’t do anything. But I mention it because
 it’s as important as knowing that multiplying A by 1.0 gives A.</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/identityExample.png" alt=""></p>

<p><strong>In C++ :</strong></p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">myIdentityMatrix</span> <span class="o">=</span> <span class="n">glm</span><span class="o">::</span><span class="n">mat4</span><span class="p">(</span><span class="mf">1.0</span><span class="n">f</span><span class="p">);</span>
</code></pre>
</div>

<h2 id="scaling-matrices">Scaling matrices</h2>

<p>Scaling matrices are quite easy too :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/scalingMatrix.png" alt=""></p>

<p>So if you want to scale a vector (position or direction, it doesn’t matter) by 2.0 in all directions :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/scalingExample.png" alt=""></p>

<p>and the w still didn’t change. You may ask : what is the meaning of 
“scaling a direction” ? Well, often, not much, so you usually don’t do 
such a thing, but in some (rare) cases it can be handy.</p>

<p>(notice that the identity matrix is only a special case of scaling 
matrices, with (X,Y,Z) = (1,1,1). It’s also a special case of 
translation matrix with (X,Y,Z)=(0,0,0), by the way)</p>

<p><strong>In C++ :</strong></p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Use #include &lt;glm/gtc/matrix_transform.hpp&gt; and #include &lt;glm/gtx/transform.hpp&gt;
</span><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">myScalingMatrix</span> <span class="o">=</span> <span class="n">glm</span><span class="o">::</span><span class="n">scale</span><span class="p">(</span><span class="mf">2.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">2.0</span><span class="n">f</span> <span class="p">,</span><span class="mf">2.0</span><span class="n">f</span><span class="p">);</span>
</code></pre>
</div>

<h2 id="rotation-matrices">Rotation matrices</h2>

<p>These are quite complicated. I’ll skip the details here, as it’s not 
important to know their exact layout for everyday use. For more 
information, please have a look to the <a href="http://www.opengl-tutorial.org/assets/faq_quaternions/index.html">Matrices and Quaternions FAQ</a> (popular resource, probably available in your language as well). You can also have a look at the <a href="">Rotations tutorials</a></p>

<p><strong>In C++ :</strong></p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Use #include &lt;glm/gtc/matrix_transform.hpp&gt; and #include &lt;glm/gtx/transform.hpp&gt;
</span><span class="n">glm</span><span class="o">::</span><span class="n">vec3</span> <span class="n">myRotationAxis</span><span class="p">(</span> <span class="o">??</span><span class="p">,</span> <span class="o">??</span><span class="p">,</span> <span class="o">??</span><span class="p">);</span>
<span class="n">glm</span><span class="o">::</span><span class="n">rotate</span><span class="p">(</span> <span class="n">angle_in_degrees</span><span class="p">,</span> <span class="n">myRotationAxis</span> <span class="p">);</span>
</code></pre>
</div>

<h2 id="cumulating-transformations">Cumulating transformations</h2>

<p>So now we know how to rotate, translate, and scale our vectors. It 
would be great to combine these transformations. This is done by 
multiplying the matrices together, for instance :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">TransformedVector</span> <span class="o">=</span> <span class="n">TranslationMatrix</span> <span class="o">*</span> <span class="n">RotationMatrix</span> <span class="o">*</span> <span class="n">ScaleMatrix</span> <span class="o">*</span> <span class="n">OriginalVector</span><span class="p">;</span>
</code></pre>
</div>

<p><strong>!!! BEWARE !!!</strong> This lines actually performs the 
scaling FIRST, and THEN the rotation, and THEN the translation. This is 
how matrix multiplication works.</p>

<p>Writing the operations in another order wouldn’t produce the same result. Try it yourself :</p>

<ul>
  <li>
    <p>make one step ahead ( beware of your computer ) and turn left;</p>
  </li>
  <li>
    <p>turn left, and make one step ahead</p>
  </li>
</ul>

<p>As a matter of fact, the order above is what you will usually need 
for game characters and other items : Scale it first if needed; then set
 its direction, then translate it. For instance, given a ship model 
(rotations have been removed for simplification) :</p>

<ul>
  <li>The wrong way :
    <ul>
      <li>You translate the ship by (10,0,0). Its center is now at 10 units of the origin.</li>
      <li>You scale your ship by 2. Every coordinate is multiplied by 2 <em>relative to the origin</em>, which is far away… So you end up with a big ship, but centered at 2*10 = 20. Which you don’t want.</li>
    </ul>
  </li>
  <li>The right way :
    <ul>
      <li>You scale your ship by 2. You get a big ship, centered on the origin.</li>
      <li>You translate your ship. It’s still the same size, and at the right distance.</li>
    </ul>
  </li>
</ul>

<p>Matrix-matrix multiplication is very similar to matrix-vector 
multiplication, so I’ll once again skip some details and redirect you 
the the <a href="http://www.opengl-tutorial.org/assets/faq_quaternions/index.html#Q11">Matrices and Quaternions FAQ</a> if needed. For now, we’ll simply ask the computer to do it :</p>

<p><strong>in C++, with GLM :</strong></p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">myModelMatrix</span> <span class="o">=</span> <span class="n">myTranslationMatrix</span> <span class="o">*</span> <span class="n">myRotationMatrix</span> <span class="o">*</span> <span class="n">myScaleMatrix</span><span class="p">;</span>
<span class="n">glm</span><span class="o">::</span><span class="n">vec4</span> <span class="n">myTransformedVector</span> <span class="o">=</span> <span class="n">myModelMatrix</span> <span class="o">*</span> <span class="n">myOriginalVector</span><span class="p">;</span>
</code></pre>
</div>

<p><strong>in GLSL :</strong></p>

<div class="language-glsl highlighter-rouge"><pre class="highlight"><code><span class="kt">mat4</span> <span class="n">transform</span> <span class="o">=</span> <span class="kt">mat2</span> <span class="o">*</span> <span class="n">mat1</span><span class="p">;</span>
<span class="kt">vec4</span> <span class="n">out_vec</span> <span class="o">=</span> <span class="n">transform</span> <span class="o">*</span> <span class="n">in_vec</span><span class="p">;</span>
</code></pre>
</div>

<h1 id="the-model-view-and-projection-matrices">The Model, View and Projection matrices</h1>

<p><em>For the rest of this tutorial, we will suppose that we know how to draw Blender’s favourite 3d model : the monkey Suzanne.</em></p>

<p>The Model, View and Projection matrices are a handy tool to separate 
transformations cleanly. You may not use this (after all, that’s what we
 did in tutorials 1 and 2). But you should. This is the way everybody 
does, because it’s easier this way.</p>

<h2 id="the-model-matrix">The Model matrix</h2>

<p>This model, just as our beloved red triangle, is defined by a set of 
vertices. The X,Y,Z coordinates of these vertices are defined relative 
to the object’s center : that is, if a vertex is at (0,0,0), it is at 
the center of the object.</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/model.png" alt=""></p>

<p>We’d like to be able to move this model, maybe because the player 
controls it with the keyboard and the mouse. Easy, you just learnt do do
 so : <code class="highlighter-rouge">translation*rotation*scale</code>,
 and done. You apply this matrix to all your vertices at each frame (in 
GLSL, not in C++!) and everything moves. Something that doesn’t move 
will be at the <em>center of the world</em>.</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/world.png" alt=""></p>

<p>Your vertices are now in <em>World Space</em>. This is the meaning of the black arrow in the image below : <em>We
 went from Model Space (all vertices defined relatively to the center of
 the model) to World Space (all vertices defined relatively to the 
center of the world).</em></p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/model_to_world.png" alt=""></p>

<p>We can sum this up with the following diagram :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/M.png" alt=""></p>

<h2 id="the-view-matrix">The View matrix</h2>

<p>Let’s quote Futurama again :</p>

<blockquote>
  <p><em>The engines don’t move the ship at all. The ship stays where it is and the engines move the universe around it.</em></p>
</blockquote>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/camera.png" alt=""></p>

<p>When you think about it, the same applies to cameras. It you want to 
view a moutain from another angle, you can either move the camera… or 
move the mountain. While not practical in real life, this is really 
simple and handy in Computer Graphics.</p>

<p>So initially your camera is at the origin of the World Space. In 
order to move the world, you simply introduce another matrix. Let’s say 
you want to move your camera of 3 units to the right (+X). This is 
equivalent to moving your whole world (meshes included) 3 units to the 
LEFT ! (-X). While you brain melts, let’s do it :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Use #include &lt;glm/gtc/matrix_transform.hpp&gt; and #include &lt;glm/gtx/transform.hpp&gt;
</span><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">ViewMatrix</span> <span class="o">=</span> <span class="n">glm</span><span class="o">::</span><span class="n">translate</span><span class="p">(</span><span class="o">-</span><span class="mf">3.0</span><span class="n">f</span><span class="p">,</span> <span class="mf">0.0</span><span class="n">f</span> <span class="p">,</span><span class="mf">0.0</span><span class="n">f</span><span class="p">);</span>
</code></pre>
</div>

<p>Again, the image below illustrates this : <em>We went from World 
Space (all vertices defined relatively to the center of the world, as we
 made so in the previous section) to Camera Space (all vertices defined 
relatively to the camera).</em></p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/model_to_world_to_camera.png" alt=""></p>

<p>Before you head explodes from this, enjoy GLM’s great glm::lookAt function:</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">CameraMatrix</span> <span class="o">=</span> <span class="n">glm</span><span class="o">::</span><span class="n">lookAt</span><span class="p">(</span>
    <span class="n">cameraPosition</span><span class="p">,</span> <span class="c1">// the position of your camera, in world space
</span>    <span class="n">cameraTarget</span><span class="p">,</span>   <span class="c1">// where you want to look at, in world space
</span>    <span class="n">upVector</span>        <span class="c1">// probably glm::vec3(0,1,0), but (0,-1,0) would make you looking upside-down, which can be great too
</span><span class="p">);</span>
</code></pre>
</div>

<p>Here’s the compulsory diagram :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/MV.png" alt=""></p>

<p>This is not over yet, though.</p>

<h2 id="the-projection-matrix">The Projection matrix</h2>

<p>We’re now in Camera Space. This means that after all theses 
transformations, a vertex that happens to have x==0 and y==0 should be 
rendered at the center of the screen. But we can’t use only the x and y 
coordinates to determine where an object should be put on the screen : 
its distance to the camera (z) counts, too ! For two vertices with 
similar x and y coordinates, the vertex with the biggest z coordinate 
will be more on the center of the screen than the other.</p>

<p>This is called a perspective projection :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/model_to_world_to_camera_to_homogeneous.png" alt=""></p>

<p>And luckily for us, a 4x4 matrix can represent this projection<sup id="fnref:projection"><a href="#fn:projection" class="footnote">1</a></sup> :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Generates a really hard-to-read matrix, but a normal, standard 4x4 matrix nonetheless
</span><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">projectionMatrix</span> <span class="o">=</span> <span class="n">glm</span><span class="o">::</span><span class="n">perspective</span><span class="p">(</span>
    <span class="n">FoV</span><span class="p">,</span>         <span class="c1">// The horizontal Field of View, in degrees : the amount of "zoom". Think "camera lens". Usually between 90° (extra wide) and 30° (quite zoomed in)
</span>    <span class="mf">4.0</span><span class="n">f</span> <span class="o">/</span> <span class="mf">3.0</span><span class="n">f</span><span class="p">,</span> <span class="c1">// Aspect Ratio. Depends on the size of your window. Notice that 4/3 == 800/600 == 1280/960, sounds familiar ?
</span>    <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span>        <span class="c1">// Near clipping plane. Keep as big as possible, or you'll get precision issues.
</span>    <span class="mf">100.0</span><span class="n">f</span>       <span class="c1">// Far clipping plane. Keep as little as possible.
</span><span class="p">);</span>
</code></pre>
</div>

<p>One last time :</p>

<p><em>We went from Camera Space (all vertices defined relatively to the
 camera) to Homogeneous Space (all vertices defined in a small cube. 
Everything inside the cube is onscreen).</em></p>

<p>And the final diagram :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/MVP.png" alt=""></p>

<p>Here’s another diagram so that you understand better what happens 
with this Projection stuff. Before projection, we’ve got our blue 
objects, in Camera Space, and the red shape represents the frustum of 
the camera : the part of the scene that the camera is actually able to 
see.</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/nondeforme.png" alt=""></p>

<p>Multiplying everything by the Projection Matrix has the following effect :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/homogeneous.png" alt=""></p>

<p>In this image, the frustum is now a perfect cube (between -1 and 1 on
 all axes, it’s a little bit hard to see it), and all blue objects have 
been deformed in the same way. Thus, the objects that are near the 
camera ( = near the face of the cube that we can’t see) are big, the 
others are smaller. Seems like real life !</p>

<p>Let’s see what it looks like from the “behind” the frustum :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/projected1.png" alt=""></p>

<p>Here you get your image ! It’s just a little bit too square, so 
another mathematical transformation is applied (this one is automatic, 
you don’t have to do it yourself in the shader) to fit this to the 
actual window size :</p>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/final1.png" alt=""></p>

<p>And this is the image that is actually rendered !</p>

<h2 id="cumulating-transformations--the-modelviewprojection-matrix">Cumulating transformations : the ModelViewProjection matrix</h2>

<p>… Just a standard matrix multiplication as you already love them !</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// C++ : compute the matrix
</span><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">MVPmatrix</span> <span class="o">=</span> <span class="n">projection</span> <span class="o">*</span> <span class="n">view</span> <span class="o">*</span> <span class="n">model</span><span class="p">;</span> <span class="c1">// Remember : inverted !
</span></code></pre>
</div>

<div class="language-glsl highlightglslfs highlighter-rouge"><pre class="highlight"><code><span class="c1">// GLSL : apply it
</span><span class="n">transformed_vertex</span> <span class="o">=</span> <span class="n">MVP</span> <span class="o">*</span> <span class="n">in_vertex</span><span class="p">;</span>
</code></pre>
</div>

<h1 id="putting-it-all-together">Putting it all together</h1>

<ul>
  <li>
    <p>First step : generating our MVP matrix. This must be done for each model you render.</p>

    <div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Projection matrix : 45° Field of View, 4:3 ratio, display range : 0.1 unit &lt;-&gt; 100 units
</span><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">Projection</span> <span class="o">=</span> <span class="n">glm</span><span class="o">::</span><span class="n">perspective</span><span class="p">(</span><span class="n">glm</span><span class="o">::</span><span class="n">radians</span><span class="p">(</span><span class="mf">45.0</span><span class="n">f</span><span class="p">),</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span> <span class="n">width</span> <span class="o">/</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">height</span><span class="p">,</span> <span class="mf">0.1</span><span class="n">f</span><span class="p">,</span> <span class="mf">100.0</span><span class="n">f</span><span class="p">);</span>
  
<span class="c1">// Or, for an ortho camera :
//glm::mat4 Projection = glm::ortho(-10.0f,10.0f,-10.0f,10.0f,0.0f,100.0f); // In world coordinates
</span>  
<span class="c1">// Camera matrix
</span><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">View</span> <span class="o">=</span> <span class="n">glm</span><span class="o">::</span><span class="n">lookAt</span><span class="p">(</span>
    <span class="n">glm</span><span class="o">::</span><span class="n">vec3</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="c1">// Camera is at (4,3,3), in World Space
</span>    <span class="n">glm</span><span class="o">::</span><span class="n">vec3</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="c1">// and looks at the origin
</span>    <span class="n">glm</span><span class="o">::</span><span class="n">vec3</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>  <span class="c1">// Head is up (set to 0,-1,0 to look upside-down)
</span>    <span class="p">);</span>
  
<span class="c1">// Model matrix : an identity matrix (model will be at the origin)
</span><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">Model</span> <span class="o">=</span> <span class="n">glm</span><span class="o">::</span><span class="n">mat4</span><span class="p">(</span><span class="mf">1.0</span><span class="n">f</span><span class="p">);</span>
<span class="c1">// Our ModelViewProjection : multiplication of our 3 matrices
</span><span class="n">glm</span><span class="o">::</span><span class="n">mat4</span> <span class="n">mvp</span> <span class="o">=</span> <span class="n">Projection</span> <span class="o">*</span> <span class="n">View</span> <span class="o">*</span> <span class="n">Model</span><span class="p">;</span> <span class="c1">// Remember, matrix multiplication is the other way around
</span></code></pre>
    </div>
  </li>
  <li>
    <p>Second step : give it to GLSL</p>

    <div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Get a handle for our "MVP" uniform
// Only during the initialisation
</span><span class="n">GLuint</span> <span class="n">MatrixID</span> <span class="o">=</span> <span class="n">glGetUniformLocation</span><span class="p">(</span><span class="n">program_id</span><span class="p">,</span> <span class="s">"MVP"</span><span class="p">);</span>
  
<span class="c1">// Send our transformation to the currently bound shader, in the "MVP" uniform
// This is done in the main loop since each model will have a different MVP matrix (At least for the M part)
</span><span class="n">glUniformMatrix4fv</span><span class="p">(</span><span class="n">mvp_handle</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">GL_FALSE</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">mvp</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]);</span>
</code></pre>
    </div>
  </li>
  <li>
    <p>Third step : use it in GLSL to transform our vertices</p>

    <div class="language-glsl highlightglslvs highlighter-rouge"><pre class="highlight"><code><span class="c1">// Input vertex data, different for all executions of this shader.
</span><span class="k">layout</span><span class="p">(</span><span class="n">location</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">in</span> <span class="kt">vec3</span> <span class="n">vertexPosition_modelspace</span><span class="p">;</span>
  
<span class="c1">// Values that stay constant for the whole mesh.
</span><span class="k">uniform</span> <span class="kt">mat4</span> <span class="n">MVP</span><span class="p">;</span>
  
<span class="kt">void</span> <span class="n">main</span><span class="p">(){</span>
  <span class="c1">// Output position of the vertex, in clip space : MVP * position
</span>  <span class="nb">gl_Position</span> <span class="o">=</span>  <span class="n">MVP</span> <span class="o">*</span> <span class="kt">vec4</span><span class="p">(</span><span class="n">vertexPosition_modelspace</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
<span class="p">}</span>
</code></pre>
    </div>
  </li>
  <li>
    <p>Done ! Here is the same triangle as in tutorial 2, still at the 
origin (0,0,0), but viewed in perspective from point (4,3,3), heads up 
(0,1,0), with a 45° field of view.</p>
  </li>
</ul>

<p><img src="Tutorial%203%20%20%20Matrices_soubory/perspective_red_triangle.png" alt=""></p>

<p>In tutorial 6 you’ll learn how to modify these values dynamically 
using the keyboard and the mouse to create a game-like camera, but 
first, we’ll learn how to give our 3D models some colour (tutorial 4) 
and textures (tutorial 5).</p>

<h1 id="exercises">Exercises</h1>

<ul>
  <li>Try changing the glm::perspective</li>
  <li>Instead of using a perspective projection, use an orthographic projection (glm::ortho)</li>
  <li>Modify ModelMatrix to translate, rotate, then scale the triangle</li>
  <li>Do the same thing, but in different orders. What do you notice ? 
What is the “best” order that you would want to use for a character ?</li>
</ul>

<p><em>Addendum</em></p>

<div class="footnotes">
  <ol>
    <li id="fn:projection">
      <p>[…]luckily for us, a 4x4 matrix can represent this projection :
 Actually, this is not correct. A perspective transformation is not 
affine, and as such, can’t be represented entirely by a matrix. After 
beeing multiplied by the ProjectionMatrix, homogeneous coordinates are 
divided by their own W component. This W component happens to be -Z 
(because the projection matrix has been crafted this way). This way, 
points that are far away from the origin are divided by a big Z; their X
 and Y coordinates become smaller; points become more close to each 
other, objects seem smaller; and this is what gives the perspective. 
This transformation is done in hardware, and is not visible in the 
shader. <a href="#fnref:projection" class="reversefootnote">↩</a></p>
    </li>
  </ol>
</div>

  </article>

</div>
      </div>
    </div>

    <footer class="site-footer">

  <div class="wrap">

    <div class="footer-col-1 column">
      <ul>
        <li><a href="mailto:contact@opengl-tutorial.org">contact@opengl-tutorial.org</a></li>
      </ul>
    </div>

    <div class="footer-col-2 column">
      <a href="https://github.com/opengl-tutorials/ogl" target="_blank">
        <span class="icon github">
          <svg version="1.1" class="github-icon-svg" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
            <path fill-rule="evenodd" clip-rule="evenodd" fill="#C2C2C2" d="M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761
            c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32
            c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472
            c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037
            C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65
            c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261
            c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082
            c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129
            c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z"></path>
          </svg>
        </span>
        <span class="username"></span>
      </a>
        
      <a href="https://twitter.com/GraphicsTut" target="_blank">
        <span class="icon twitter">
          <svg version="1.1" class="twitter-icon-svg" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
            <path fill="#C2C2C2" d="M15.969,3.058c-0.586,0.26-1.217,0.436-1.878,0.515c0.675-0.405,1.194-1.045,1.438-1.809
            c-0.632,0.375-1.332,0.647-2.076,0.793c-0.596-0.636-1.446-1.033-2.387-1.033c-1.806,0-3.27,1.464-3.27,3.27
            c0,0.256,0.029,0.506,0.085,0.745C5.163,5.404,2.753,4.102,1.14,2.124C0.859,2.607,0.698,3.168,0.698,3.767
            c0,1.134,0.577,2.135,1.455,2.722C1.616,6.472,1.112,6.325,0.671,6.08c0,0.014,0,0.027,0,0.041c0,1.584,1.127,2.906,2.623,3.206
            C3.02,9.402,2.731,9.442,2.433,9.442c-0.211,0-0.416-0.021-0.615-0.059c0.416,1.299,1.624,2.245,3.055,2.271
            c-1.119,0.877-2.529,1.4-4.061,1.4c-0.264,0-0.524-0.015-0.78-0.046c1.447,0.928,3.166,1.469,5.013,1.469
            c6.015,0,9.304-4.983,9.304-9.304c0-0.142-0.003-0.283-0.009-0.423C14.976,4.29,15.531,3.714,15.969,3.058z"></path>
          </svg>
        </span>
        <span class="username"></span>
      </a>
      <a href="https://plus.google.com/107410003823545892786" target="_blank">
        <span class="icon gplus">
          <svg class="gplus-icon-svg" enable-background="new 0 0 128 128" height="128px" id="Layer_1" version="1.1" viewBox="0 0 128 128" width="128px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink"><g><circle cx="64" cy="64" fill="#C2C2C2" r="64"></circle><g><g><path d="M49.424,97.875c-19.018,0-34.491-15.193-34.491-33.874c0-18.68,15.473-33.875,34.491-33.875     c8.318,0,16.354,2.952,22.624,8.309l-8.771,9.899c-3.838-3.279-8.758-5.086-13.853-5.086c-11.652,0-21.13,9.31-21.13,20.752     c0,11.441,9.479,20.75,21.13,20.75c9.858,0,16.311-4.723,18.407-13.197H49.587V58.432h32.347v6.562     C81.934,84.659,68.869,97.875,49.424,97.875z" fill="#FFFFFF"></path></g><polygon fill="#FFFFFF" points="117.934,58.438 107.934,58.438 107.934,48.438 99.934,48.438 99.934,58.438 89.934,58.438     89.934,66.438 99.934,66.438 99.934,76.438 107.934,76.438 107.934,66.438 117.934,66.438   "></polygon></g></g>
          </svg>
        </span>
      </a>
    </div>

    <div class="footer-col-3 column">
      <p class="text">Free tutorials for modern Opengl (3.3 and later) in C/C++</p>
    </div>

  </div>

</footer>


    
</body></html>