<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Tutorial 5 : A Textured Cube</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free tutorials for modern Opengl (3.3 and later) in C/C++">
    <link rel="canonical" href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-5-a-textured-cube/">

    <!-- Custom CSS -->
    <link rel="stylesheet" href="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/main.css">
    <link href="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/syntax.css" rel="stylesheet">

    <script async="" src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/analytics.js"></script><script>

      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-22633480-2', {'siteSpeedSampleRate': 40});
      ga('send', 'pageview');
      
    </script>
    
</head>


    <body>

    
    <header class="site-header">

  <script>
    String.prototype.replaceAt=function(index, character) {
    return this.substr(0, index) + character + this.substr(index+character.length);
    }
    
    function myFunction() {
    var x = document.getElementById("myLanguage").value
    var pageurl = "/beginners-tutorials/tutorial-5-a-textured-cube/"
    if (pageurl.charAt(3) == '/') {
      if(x=='en'){
        pageurl = pageurl.substring(3);
      } else {
        pageurl = pageurl.replaceAt(1, x);
      }
      window.open ('' + pageurl,'_self',false);
    } else { 
      window.open ('/' + x + pageurl,'_self',false);
    }
    
    
    }
  </script>
  
  <div class="wrap">
    
      <a class="site-title" href="http://www.opengl-tutorial.org/">opengl-tutorial</a>
    

    <nav class="site-nav">
      
      <a href="#" class="menu-icon">
        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 18 15" enable-background="new 0 0 18 15" xml:space="preserve">
          <path fill="#505050" d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0
            h15.031C17.335,0,18,0.665,18,1.484L18,1.484z"></path>
          <path fill="#505050" d="M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0c0-0.82,0.665-1.484,1.484-1.484
            h15.031C17.335,6.031,18,6.696,18,7.516L18,7.516z"></path>
          <path fill="#505050" d="M18,13.516C18,14.335,17.335,15,16.516,15H1.484C0.665,15,0,14.335,0,13.516l0,0
            c0-0.82,0.665-1.484,1.484-1.484h15.031C17.335,12.031,18,12.696,18,13.516L18,13.516z"></path>
        </svg>
      </a>

      <ul class="trigger">
        
        

        <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/">Basic tutorials</a>
          <span class="arrow">▼</span>
          <ul class="sub-menu">
            
            
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-1-opening-a-window/">Tutorial 1 : Opening a window</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-2-the-first-triangle/">Tutorial 2 : The first triangle</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-3-matrices/">Tutorial 3 : Matrices</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-4-a-colored-cube/">Tutorial 4 : A Colored Cube</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-5-a-textured-cube/">Tutorial 5 : A Textured Cube</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-6-keyboard-and-mouse/">Tutorial 6 : Keyboard and Mouse</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-7-model-loading/">Tutorial 7 : Model loading</a></li>
                
              
            
              
              
            
              
              
            
              
              
                
                      
                  <li><a href="http://www.opengl-tutorial.org/beginners-tutorials/tutorial-8-basic-shading/">Tutorial 8 : Basic shading</a></li>
                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
          </ul>
        </li>
        <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/">Intermediate tutorials</a>
          <span class="arrow">▼</span>
          <ul class="sub-menu">
            
            
            
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-9-vbo-indexing/">Tutorial 9 : VBO Indexing</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-10-transparency/">Tutorial 10 : Transparency</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-11-2d-text/">Tutorial 11 : 2D text</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-12-opengl-extensions/">Tutorial 12 : OpenGL Extensions</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-13-normal-mapping/">Tutorial 13 : Normal Mapping</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-14-render-to-texture/">Tutorial 14 : Render To Texture</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-15-lightmaps/">Tutorial 15 : Lightmaps</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-16-shadow-mapping/">Tutorial 16 : Shadow mapping</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-17-quaternions/">Tutorial 17 : Rotations</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/billboards-particles/">Tutorial 18 : Billboards &amp; Particles</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                    <span class="arrow">▶</span><ul class="sub-menu">
                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/billboards-particles/billboards/">Billboards</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                  <li><a href="http://www.opengl-tutorial.org/intermediate-tutorials/billboards-particles/particles-instancing/">Particles / Instancing</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
            
              
              </ul></li>
            
          </ul>
        </li>
        <li><a href="http://www.opengl-tutorial.org/miscellaneous/">Miscellaneous</a>
          <span class="arrow">▼</span>
          <ul class="sub-menu">
            
            
            
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/faq/">FAQ</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/contribute/">Contribute</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                    <span class="arrow">▶</span><ul class="sub-menu">
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/contribute/translation/">Translation</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                    </ul></li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/math-cheatsheet/">Math Cheatsheet</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/useful-tools-links/">Useful Tools &amp; Links</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/an-fps-counter/">An FPS counter</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/building-your-own-c-application/">Building your own C application</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    </li>
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/clicking-on-objects/">Clicking on objects</a>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                    
                    <span class="arrow">▶</span><ul class="sub-menu">
                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/clicking-on-objects/picking-with-an-opengl-hack/">Picking with an OpenGL hack</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/clicking-on-objects/picking-with-a-physics-library/">Picking with a physics library</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
                
                

                  
                  <li><a href="http://www.opengl-tutorial.org/miscellaneous/clicking-on-objects/picking-with-custom-ray-obb-function/">Picking with custom Ray-OBB function</a></li>

                
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
              
              
            
            
              
              </ul></li>
            
          </ul>
        </li>
        <li><a href="http://www.opengl-tutorial.org/download/">Download</a></li>


        <li><select id="myLanguage" onchange="myFunction()">
          
            <option value="en" selected="selected">english</option>	    
          
            <option value="cn">chinese</option>	    
          
            <option value="jp">japanese</option>	    
          
            <option value="ru">russian</option>	    
          
            <option value="fr">français</option>	    
          
	       </select></li>
       </ul>
      </nav></div>
    
  
</header>

    

    <div class="page-content">
      <div class="wrap">
      <div class="post">

  <header class="post-header">
    <h1>Tutorial 5 : A Textured Cube</h1>
  </header>

  <article class="post-content">
  <p>In this tutorial, you will learn :</p>

<ul>
  <li>What are UV coordinates</li>
  <li>How to load textures yourself</li>
  <li>How to use them in OpenGL</li>
  <li>What is filtering and mipmapping, and how to use them</li>
  <li>How to load texture more robustly with GLFW</li>
  <li>What the alpha channel is</li>
</ul>

<h1 id="about-uv-coordinates">About UV coordinates</h1>

<p>When texturing a mesh, you need a way to tell to OpenGL which part of
 the image has to be used for each triangle. This is done with UV 
coordinates.</p>

<p>Each vertex can have, on top of its position, a couple of floats, U 
and V. These coordinates are used to access the texture, in the 
following way :</p>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/UVintro.png" alt=""></p>

<p>Notice how the texture is distorted on the triangle.</p>

<h1 id="loading-bmp-images-yourself">Loading .BMP images yourself</h1>

<p>Knowing the BMP file format is not crucial : plenty of libraries can 
load BMP files for you. But it’s very simple and can help you understand
 how things work under the hood. So we’ll write a BMP file loader from 
scratch, so that you know how it works, <span style="text-decoration: underline;">and never use it again</span>.</p>

<p>Here is the declaration of the loading function :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">GLuint</span> <span class="n">loadBMP_custom</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">imagepath</span><span class="p">);</span>
</code></pre>
</div>

<p>so it’s used like this :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">GLuint</span> <span class="n">image</span> <span class="o">=</span> <span class="n">loadBMP_custom</span><span class="p">(</span><span class="s">"./my_texture.bmp"</span><span class="p">);</span>
</code></pre>
</div>

<p>Let’s see how to read a BMP file, then.</p>

<p>First, we’ll need some data. These variable will be set when reading the file.</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Data read from the header of the BMP file
</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">header</span><span class="p">[</span><span class="mi">54</span><span class="p">];</span> <span class="c1">// Each BMP file begins by a 54-bytes header
</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">dataPos</span><span class="p">;</span>     <span class="c1">// Position in the file where the actual data begins
</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">;</span>
<span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">imageSize</span><span class="p">;</span>   <span class="c1">// = width*height*3
// Actual RGB data
</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">data</span><span class="p">;</span>
</code></pre>
</div>

<p>We now have to actually open the file</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Open the file
</span><span class="kt">FILE</span> <span class="o">*</span> <span class="n">file</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">imagepath</span><span class="p">,</span><span class="s">"rb"</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">file</span><span class="p">){</span><span class="n">printf</span><span class="p">(</span><span class="s">"Image could not be opened</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;}</span>
</code></pre>
</div>

<p>The first thing in the file is a 54-bytes header. It contains 
information such as “Is this file really a BMP file?”, the size of the 
image, the number of bits per pixel, etc. So let’s read this header :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span> <span class="n">fread</span><span class="p">(</span><span class="n">header</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">54</span><span class="p">,</span> <span class="n">file</span><span class="p">)</span><span class="o">!=</span><span class="mi">54</span> <span class="p">){</span> <span class="c1">// If not 54 bytes read : problem
</span>    <span class="n">printf</span><span class="p">(</span><span class="s">"Not a correct BMP file</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>

<p>The header always begins by BM. As a matter of fact, here’s what you get when you open a .BMP file in a hexadecimal editor :</p>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/hexbmp.png" alt=""></p>

<p>So we have to check that the two first bytes are really ‘B’ and ‘M’ :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span> <span class="n">header</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="sc">'B'</span> <span class="o">||</span> <span class="n">header</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!=</span><span class="sc">'M'</span> <span class="p">){</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"Not a correct BMP file</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>

<p>Now we can read the size of the image, the location of the data in the file, etc :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Read ints from the byte array
</span><span class="n">dataPos</span>    <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">header</span><span class="p">[</span><span class="mh">0x0A</span><span class="p">]);</span>
<span class="n">imageSize</span>  <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">header</span><span class="p">[</span><span class="mh">0x22</span><span class="p">]);</span>
<span class="n">width</span>      <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">header</span><span class="p">[</span><span class="mh">0x12</span><span class="p">]);</span>
<span class="n">height</span>     <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">header</span><span class="p">[</span><span class="mh">0x16</span><span class="p">]);</span>
</code></pre>
</div>

<p>We have to make up some info if it’s missing :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Some BMP files are misformatted, guess missing information
</span><span class="k">if</span> <span class="p">(</span><span class="n">imageSize</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>    <span class="n">imageSize</span><span class="o">=</span><span class="n">width</span><span class="o">*</span><span class="n">height</span><span class="o">*</span><span class="mi">3</span><span class="p">;</span> <span class="c1">// 3 : one byte for each Red, Green and Blue component
</span><span class="k">if</span> <span class="p">(</span><span class="n">dataPos</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>      <span class="n">dataPos</span><span class="o">=</span><span class="mi">54</span><span class="p">;</span> <span class="c1">// The BMP header is done that way
</span></code></pre>
</div>

<p>Now that we know the size of the image, we can allocate some memory to read the image into, and read :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Create a buffer
</span><span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="p">[</span><span class="n">imageSize</span><span class="p">];</span>

<span class="c1">// Read the actual data from the file into the buffer
</span><span class="n">fread</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">imageSize</span><span class="p">,</span><span class="n">file</span><span class="p">);</span>

<span class="c1">//Everything is in memory now, the file can be closed
</span><span class="n">fclose</span><span class="p">(</span><span class="n">file</span><span class="p">);</span>
</code></pre>
</div>

<p>We arrive now at the real OpenGL part. Creating textures is very 
similar to creating vertex buffers : Create a texture, bind it, fill it,
 and configure it.</p>

<p>In glTexImage2D, the GL_RGB indicates that we are talking about a 
3-component color, and GL_BGR says how exactly it is represented in RAM.
 As a matter of fact, BMP does not store Red-&gt;Green-&gt;Blue but 
Blue-&gt;Green-&gt;Red, so we have to tell it to OpenGL.</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Create one OpenGL texture
</span><span class="n">GLuint</span> <span class="n">textureID</span><span class="p">;</span>
<span class="n">glGenTextures</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">textureID</span><span class="p">);</span>

<span class="c1">// "Bind" the newly created texture : all future texture functions will modify this texture
</span><span class="n">glBindTexture</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">textureID</span><span class="p">);</span>

<span class="c1">// Give the image to OpenGL
</span><span class="n">glTexImage2D</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="n">GL_RGB</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">GL_BGR</span><span class="p">,</span> <span class="n">GL_UNSIGNED_BYTE</span><span class="p">,</span> <span class="n">data</span><span class="p">);</span>

<span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_MAG_FILTER</span><span class="p">,</span> <span class="n">GL_NEAREST</span><span class="p">);</span>
<span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_MIN_FILTER</span><span class="p">,</span> <span class="n">GL_NEAREST</span><span class="p">);</span>
</code></pre>
</div>

<p>We’ll explain those last two lines later. Meanwhile, on the C++-side, you can use your new function to load a texture :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">GLuint</span> <span class="n">Texture</span> <span class="o">=</span> <span class="n">loadBMP_custom</span><span class="p">(</span><span class="s">"uvtemplate.bmp"</span><span class="p">);</span>
</code></pre>
</div>

<blockquote>
  <p>Another very important point :** use power-of-two textures !**</p>

  <ul>
    <li>good : 128*128, 256*256, 1024*1024, 2*2…</li>
    <li>bad : 127*128, 3*5, …</li>
    <li>okay but weird : 128*256</li>
  </ul>
</blockquote>

<h1 id="using-the-texture-in-opengl">Using the texture in OpenGL</h1>

<p>We’ll have a look at the fragment shader first. Most of it is straightforward :</p>

<div class="language-glsl highlighter-rouge"><pre class="highlight"><code><span class="cp">#version 330 core
</span>
<span class="c1">// Interpolated values from the vertex shaders
</span><span class="k">in</span> <span class="kt">vec2</span> <span class="n">UV</span><span class="p">;</span>

<span class="c1">// Ouput data
</span><span class="k">out</span> <span class="kt">vec3</span> <span class="n">color</span><span class="p">;</span>

<span class="c1">// Values that stay constant for the whole mesh.
</span><span class="k">uniform</span> <span class="kt">sampler2D</span> <span class="n">myTextureSampler</span><span class="p">;</span>

<span class="kt">void</span> <span class="n">main</span><span class="p">(){</span>

    <span class="c1">// Output color = color of the texture at the specified UV
</span>    <span class="n">color</span> <span class="o">=</span> <span class="n">texture</span><span class="p">(</span> <span class="n">myTextureSampler</span><span class="p">,</span> <span class="n">UV</span> <span class="p">).</span><span class="n">rgb</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>

<p class="highlightglslfs">Three things :</p>

<ul>
  <li>The fragment shader needs UV coordinates. Seems fair.</li>
  <li>It also needs a “sampler2D” in order to know which texture to access (you can access several texture in the same shader)</li>
  <li>Finally, accessing a texture is done with texture(), which gives back a (R,G,B,A) vec4. We’ll see about the A shortly.</li>
</ul>

<p>The vertex shader is simple too, you just have to pass the UVs to the fragment shader :</p>

<div class="language-glsl highlighter-rouge"><pre class="highlight"><code><span class="cp">#version 330 core
</span>
<span class="c1">// Input vertex data, different for all executions of this shader.
</span><span class="k">layout</span><span class="p">(</span><span class="n">location</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">in</span> <span class="kt">vec3</span> <span class="n">vertexPosition_modelspace</span><span class="p">;</span>
<span class="k">layout</span><span class="p">(</span><span class="n">location</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span> <span class="k">in</span> <span class="kt">vec2</span> <span class="n">vertexUV</span><span class="p">;</span>

<span class="c1">// Output data ; will be interpolated for each fragment.
</span><span class="k">out</span> <span class="kt">vec2</span> <span class="n">UV</span><span class="p">;</span>

<span class="c1">// Values that stay constant for the whole mesh.
</span><span class="k">uniform</span> <span class="kt">mat4</span> <span class="n">MVP</span><span class="p">;</span>

<span class="kt">void</span> <span class="n">main</span><span class="p">(){</span>

    <span class="c1">// Output position of the vertex, in clip space : MVP * position
</span>    <span class="nb">gl_Position</span> <span class="o">=</span>  <span class="n">MVP</span> <span class="o">*</span> <span class="kt">vec4</span><span class="p">(</span><span class="n">vertexPosition_modelspace</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>

    <span class="c1">// UV of the vertex. No special space for this one.
</span>    <span class="n">UV</span> <span class="o">=</span> <span class="n">vertexUV</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>

<p class="highlightglslvs">Remember “layout(location = 1) in vec2 
vertexUV” from Tutorial 4 ? Well, we’ll have to do the exact same thing 
here, but instead of giving a buffer (R,G,B) triplets, we’ll give a 
buffer of (U,V) pairs.</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// Two UV coordinatesfor each vertex. They were created with Blender. You'll learn shortly how to do this yourself.
</span><span class="k">static</span> <span class="k">const</span> <span class="n">GLfloat</span> <span class="n">g_uv_buffer_data</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
    <span class="mf">0.000059</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.000004</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.000103</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.336048</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.335973</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335903</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">1.000023</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.000013</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.667979</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335851</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.999958</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.336064</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.667979</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335851</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.336024</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.671877</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.667969</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.671889</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">1.000023</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.000013</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.668104</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.000013</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.667979</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335851</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.000059</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.000004</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.335973</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335903</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.336098</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.000071</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.667979</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335851</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.335973</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335903</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.336024</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.671877</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">1.000004</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.671847</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.999958</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.336064</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.667979</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335851</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.668104</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.000013</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.335973</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335903</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.667979</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335851</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.335973</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335903</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.668104</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.000013</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.336098</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.000071</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.000103</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.336048</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.000004</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.671870</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.336024</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.671877</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.000103</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.336048</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.336024</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.671877</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.335973</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335903</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.667969</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.671889</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">1.000004</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.671847</span><span class="n">f</span><span class="p">,</span>
    <span class="mf">0.667979</span><span class="n">f</span><span class="p">,</span> <span class="mf">1.0</span><span class="n">f</span><span class="o">-</span><span class="mf">0.335851</span><span class="n">f</span>
<span class="p">};</span>
</code></pre>
</div>

<p>The UV coordinates above correspond to the following model :</p>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/uv_mapping_blender.png" alt=""></p>

<p>The rest is obvious. Generate the buffer, bind it, fill it, configure
 it, and draw the Vertex Buffer as usual. Just be careful to use 2 as 
the second parameter (size) of glVertexAttribPointer instead of 3.</p>

<p>This is the result :</p>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/nearfiltering.png" alt=""></p>

<p>and a zoomed-in version :</p>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/nearfiltering_zoom.png" alt=""></p>

<h1 id="what-is-filtering-and-mipmapping-and-how-to-use-them">What is filtering and mipmapping, and how to use them</h1>

<p>As you can see in the screenshot above, the texture quality is not that great. This is because in loadBMP_custom, we wrote :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_MAG_FILTER</span><span class="p">,</span> <span class="n">GL_NEAREST</span><span class="p">);</span>
<span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_MIN_FILTER</span><span class="p">,</span> <span class="n">GL_NEAREST</span><span class="p">);</span>
</code></pre>
</div>

<p>This means that in our fragment shader, texture() takes the texel that is at the (U,V) coordinates, and continues happily.</p>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/nearest.png" alt=""></p>

<p>There are several things we can do to improve this.</p>

<h2 id="linear-filtering">Linear filtering</h2>

<p>With linear filtering, texture() also looks at the other texels 
around, and mixes the colours according to the distance to each center. 
This avoids the hard edges seen above.</p>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/linear1.png" alt=""></p>

<p>This is much better, and this is used a lot, but if you want very 
high quality you can also use anisotropic filtering, which is a bit 
slower.</p>

<h2 id="anisotropic-filtering">Anisotropic filtering</h2>

<p>This one approximates the  part of the image that is really seen 
through the fragment. For instance, if the following texture is seen 
from the side, and a little bit rotated, anisotropic filtering will 
compute the colour contained in the blue rectangle by taking a fixed 
number of samples (the “anisotropic level”) along its main direction.</p>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/aniso.png" alt=""></p>

<h2 id="mipmaps">Mipmaps</h2>

<p>Both linear and anisotropic filtering have a problem. If the texture 
is seen from far away, mixing only 4 texels won’t be enough. Actually, 
if your 3D model is so far away than it takes only 1 fragment on screen,
 ALL the texels of the image should be averaged to produce the final 
color. This is obviously not done for performance reasons. Instead, we 
introduce MipMaps :</p>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/MipMap_Example_STS101.jpg" alt=""></p>

<ul>
  <li>At initialisation time, you scale down your image by 2, 
successively, until you only have a 1x1 image (which effectively is the 
average of all the texels in the image)</li>
  <li>When you draw a mesh, you select which mipmap is the more appropriate to use given how big the texel should be.</li>
  <li>You sample this mipmap with either nearest, linear or anisotropic filtering</li>
  <li>For additional quality, you can also sample two mipmaps and blend the results.</li>
</ul>

<p>Luckily, all this is very simple to do, OpenGL does everything for us provided that you ask him nicely :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="c1">// When MAGnifying the image (no bigger mipmap available), use LINEAR filtering
</span><span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_MAG_FILTER</span><span class="p">,</span> <span class="n">GL_LINEAR</span><span class="p">);</span>
<span class="c1">// When MINifying the image, use a LINEAR blend of two mipmaps, each filtered LINEARLY too
</span><span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_MIN_FILTER</span><span class="p">,</span> <span class="n">GL_LINEAR_MIPMAP_LINEAR</span><span class="p">);</span>
<span class="c1">// Generate mipmaps, by the way.
</span><span class="n">glGenerateMipmap</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">);</span>
</code></pre>
</div>

<h1 id="how-to-load-texture-with-glfw">How to load texture with GLFW</h1>

<p>Our loadBMP_custom function is great because we made it ourselves, 
but using a dedicated library is better. GLFW2 can do that too (but only
 for TGA files, and this feature has been removed in GLFW3, that we now 
use) :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">GLuint</span> <span class="n">loadTGA_glfw</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">imagepath</span><span class="p">){</span>

    <span class="c1">// Create one OpenGL texture
</span>    <span class="n">GLuint</span> <span class="n">textureID</span><span class="p">;</span>
    <span class="n">glGenTextures</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">textureID</span><span class="p">);</span>

    <span class="c1">// "Bind" the newly created texture : all future texture functions will modify this texture
</span>    <span class="n">glBindTexture</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">textureID</span><span class="p">);</span>

    <span class="c1">// Read the file, call glTexImage2D with the right parameters
</span>    <span class="n">glfwLoadTexture2D</span><span class="p">(</span><span class="n">imagepath</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

    <span class="c1">// Nice trilinear filtering.
</span>    <span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_WRAP_S</span><span class="p">,</span> <span class="n">GL_REPEAT</span><span class="p">);</span>
    <span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_WRAP_T</span><span class="p">,</span> <span class="n">GL_REPEAT</span><span class="p">);</span>
    <span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_MAG_FILTER</span><span class="p">,</span> <span class="n">GL_LINEAR</span><span class="p">);</span>
    <span class="n">glTexParameteri</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">GL_TEXTURE_MIN_FILTER</span><span class="p">,</span> <span class="n">GL_LINEAR_MIPMAP_LINEAR</span><span class="p">);</span>
    <span class="n">glGenerateMipmap</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">);</span>

    <span class="c1">// Return the ID of the texture we just created
</span>    <span class="k">return</span> <span class="n">textureID</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>

<h1 id="compressed-textures">Compressed Textures</h1>

<p>At this point, you’re probably wondering how to load JPEG files instead of TGA.</p>

<p>Short answer : don’t. GPUs can’t understand JPEG. So you’ll compress 
your original image in JPEG, and decompress it so that the GPU can 
understand it. You’re back to raw images, but you lost image quality 
while compressing to JPEG.</p>

<p>There’s a better option.</p>

<h2 id="creating-compressed-textures">Creating compressed textures</h2>

<ul>
  <li>Download <a href="http://developer.amd.com/Resources/archive/ArchivedTools/gpu/compressonator/Pages/default.aspx">The Compressonator</a>, an AMD tool</li>
  <li>Load a Power-Of-Two texture in it</li>
  <li>Generate mipmaps so that you won’t have to do it on runtime</li>
  <li>Compress it in DXT1, DXT3 or in DXT5 (more about the differences between the various formats on <a href="http://en.wikipedia.org/wiki/S3_Texture_Compression">Wikipedia</a>) :</li>
</ul>

<p><img src="Tutorial%205%20%20%20A%20Textured%20Cube_soubory/TheCompressonator.png" alt=""></p>

<ul>
  <li>Export it as a .DDS file.</li>
</ul>

<p>At this point, your image is compressed in a format that is directly 
compatible with the GPU. Whenever calling texture() in a shader, it will
 uncompress it on-the-fly. This can seem slow, but since it takes a LOT 
less memory, less data needs to be transferred. But memory transfers are
 expensive; and texture decompression is free (there is dedicated 
hardware for that). Typically, using texture compression yields a 20% 
increase in performance. So you save on performance and memory, at the 
expense of reduced quality.</p>

<h2 id="using-the-compressed-texture">Using the compressed texture</h2>

<p>Let’s see how to load the image. It’s very similar to the BMP code, except that the header is organized differently :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code><span class="n">GLuint</span> <span class="n">loadDDS</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">imagepath</span><span class="p">){</span>

    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">header</span><span class="p">[</span><span class="mi">124</span><span class="p">];</span>

    <span class="kt">FILE</span> <span class="o">*</span><span class="n">fp</span><span class="p">;</span>

    <span class="cm">/* try to open the file */</span>
    <span class="n">fp</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">imagepath</span><span class="p">,</span> <span class="s">"rb"</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">fp</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>

    <span class="cm">/* verify the type of file */</span>
    <span class="kt">char</span> <span class="n">filecode</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>
    <span class="n">fread</span><span class="p">(</span><span class="n">filecode</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="n">fp</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">filecode</span><span class="p">,</span> <span class="s">"DDS "</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">fclose</span><span class="p">(</span><span class="n">fp</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="cm">/* get the surface desc */</span>
    <span class="n">fread</span><span class="p">(</span><span class="o">&amp;</span><span class="n">header</span><span class="p">,</span> <span class="mi">124</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">fp</span><span class="p">);</span> 

    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">height</span>      <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">header</span><span class="p">[</span><span class="mi">8</span> <span class="p">]);</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">width</span>         <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">header</span><span class="p">[</span><span class="mi">12</span><span class="p">]);</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">linearSize</span>     <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">header</span><span class="p">[</span><span class="mi">16</span><span class="p">]);</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">mipMapCount</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">header</span><span class="p">[</span><span class="mi">24</span><span class="p">]);</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">fourCC</span>      <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">header</span><span class="p">[</span><span class="mi">80</span><span class="p">]);</span>
</code></pre>
</div>

<p>After the header is the actual data : all the mipmap levels, successively. We can read them all in one batch :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code>    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">buffer</span><span class="p">;</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">bufsize</span><span class="p">;</span>
    <span class="cm">/* how big is it going to be including all mipmaps? */</span>
    <span class="n">bufsize</span> <span class="o">=</span> <span class="n">mipMapCount</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="o">?</span> <span class="n">linearSize</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">:</span> <span class="n">linearSize</span><span class="p">;</span>
    <span class="n">buffer</span> <span class="o">=</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">bufsize</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span><span class="p">));</span>
    <span class="n">fread</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">bufsize</span><span class="p">,</span> <span class="n">fp</span><span class="p">);</span>
    <span class="cm">/* close the file pointer */</span>
    <span class="n">fclose</span><span class="p">(</span><span class="n">fp</span><span class="p">);</span>
</code></pre>
</div>

<p>Here we’ll deal with 3 different formats : DXT1, DXT3 and DXT5. We 
need to convert the “fourCC” flag into a value that OpenGL understands.</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">components</span>  <span class="o">=</span> <span class="p">(</span><span class="n">fourCC</span> <span class="o">==</span> <span class="n">FOURCC_DXT1</span><span class="p">)</span> <span class="o">?</span> <span class="mi">3</span> <span class="o">:</span> <span class="mi">4</span><span class="p">;</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">format</span><span class="p">;</span>
    <span class="k">switch</span><span class="p">(</span><span class="n">fourCC</span><span class="p">)</span>
    <span class="p">{</span>
    <span class="k">case</span> <span class="n">FOURCC_DXT1</span><span class="p">:</span>
        <span class="n">format</span> <span class="o">=</span> <span class="n">GL_COMPRESSED_RGBA_S3TC_DXT1_EXT</span><span class="p">;</span>
        <span class="k">break</span><span class="p">;</span>
    <span class="k">case</span> <span class="n">FOURCC_DXT3</span><span class="p">:</span>
        <span class="n">format</span> <span class="o">=</span> <span class="n">GL_COMPRESSED_RGBA_S3TC_DXT3_EXT</span><span class="p">;</span>
        <span class="k">break</span><span class="p">;</span>
    <span class="k">case</span> <span class="n">FOURCC_DXT5</span><span class="p">:</span>
        <span class="n">format</span> <span class="o">=</span> <span class="n">GL_COMPRESSED_RGBA_S3TC_DXT5_EXT</span><span class="p">;</span>
        <span class="k">break</span><span class="p">;</span>
    <span class="k">default</span><span class="o">:</span>
        <span class="n">free</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre>
</div>

<p>Creating the texture is done as usual :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code>    <span class="c1">// Create one OpenGL texture
</span>    <span class="n">GLuint</span> <span class="n">textureID</span><span class="p">;</span>
    <span class="n">glGenTextures</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">textureID</span><span class="p">);</span>

    <span class="c1">// "Bind" the newly created texture : all future texture functions will modify this texture
</span>    <span class="n">glBindTexture</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">textureID</span><span class="p">);</span>
</code></pre>
</div>

<p>And now, we just have to fill each mipmap one after another :</p>

<div class="language-cpp highlighter-rouge"><pre class="highlight"><code>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">blockSize</span> <span class="o">=</span> <span class="p">(</span><span class="n">format</span> <span class="o">==</span> <span class="n">GL_COMPRESSED_RGBA_S3TC_DXT1_EXT</span><span class="p">)</span> <span class="o">?</span> <span class="mi">8</span> <span class="o">:</span> <span class="mi">16</span><span class="p">;</span>
    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">offset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="cm">/* load the mipmaps */</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">level</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">level</span> <span class="o">&lt;</span> <span class="n">mipMapCount</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">width</span> <span class="o">||</span> <span class="n">height</span><span class="p">);</span> <span class="o">++</span><span class="n">level</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="p">((</span><span class="n">width</span><span class="o">+</span><span class="mi">3</span><span class="p">)</span><span class="o">/</span><span class="mi">4</span><span class="p">)</span><span class="o">*</span><span class="p">((</span><span class="n">height</span><span class="o">+</span><span class="mi">3</span><span class="p">)</span><span class="o">/</span><span class="mi">4</span><span class="p">)</span><span class="o">*</span><span class="n">blockSize</span><span class="p">;</span>
        <span class="n">glCompressedTexImage2D</span><span class="p">(</span><span class="n">GL_TEXTURE_2D</span><span class="p">,</span> <span class="n">level</span><span class="p">,</span> <span class="n">format</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> 
            <span class="mi">0</span><span class="p">,</span> <span class="n">size</span><span class="p">,</span> <span class="n">buffer</span> <span class="o">+</span> <span class="n">offset</span><span class="p">);</span>

        <span class="n">offset</span> <span class="o">+=</span> <span class="n">size</span><span class="p">;</span>
        <span class="n">width</span>  <span class="o">/=</span> <span class="mi">2</span><span class="p">;</span>
        <span class="n">height</span> <span class="o">/=</span> <span class="mi">2</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">free</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span> 

    <span class="k">return</span> <span class="n">textureID</span><span class="p">;</span>
</code></pre>
</div>

<h2 id="inversing-the-uvs">Inversing the UVs</h2>

<p>DXT compression comes from the DirectX world, where the V texture 
coordinate is inversed compared to OpenGL. So if you use compressed 
textures, you’ll have to use ( coord.u, 1.0-coord.v) to fetch the 
correct texel. You can do this whenever you want : in your export 
script, in your loader, in your shader…</p>

<h1 id="conclusion">Conclusion</h1>

<p>You just learnt to create, load and use textures in OpenGL.</p>

<p>In general, you should only use compressed textures, since they are 
smaller to store, almost instantaneous to load, and faster to use; the 
main drawback it that you have to convert your images through The 
Compressonator (or any similar tool)</p>

<h1 id="exercices">Exercices</h1>

<ul>
  <li>The DDS loader is implemented in the source code, but not the 
texture coordinate modification. Change the code at the appropriate 
place to display the cube correctly.</li>
  <li>Experiment with the various DDS formats. Do they give different result ? Different compression ratios ?</li>
  <li>Try not to generate mipmaps in The Compressonator. What is the result ? Give 3 different ways to fix this.</li>
</ul>

<h1 id="references">References</h1>

<ul>
  <li><a href="http://www.oldunreal.com/editing/s3tc/ARB_texture_compression.pdf">Using texture compression in OpenGL</a> , Sébastien Domine, NVIDIA</li>
</ul>


  </article>

</div>
      </div>
    </div>

    <footer class="site-footer">

  <div class="wrap">

    <div class="footer-col-1 column">
      <ul>
        <li><a href="mailto:contact@opengl-tutorial.org">contact@opengl-tutorial.org</a></li>
      </ul>
    </div>

    <div class="footer-col-2 column">
      <a href="https://github.com/opengl-tutorials/ogl" target="_blank">
        <span class="icon github">
          <svg version="1.1" class="github-icon-svg" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
            <path fill-rule="evenodd" clip-rule="evenodd" fill="#C2C2C2" d="M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761
            c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32
            c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472
            c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037
            C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65
            c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261
            c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082
            c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129
            c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z"></path>
          </svg>
        </span>
        <span class="username"></span>
      </a>
        
      <a href="https://twitter.com/GraphicsTut" target="_blank">
        <span class="icon twitter">
          <svg version="1.1" class="twitter-icon-svg" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
            <path fill="#C2C2C2" d="M15.969,3.058c-0.586,0.26-1.217,0.436-1.878,0.515c0.675-0.405,1.194-1.045,1.438-1.809
            c-0.632,0.375-1.332,0.647-2.076,0.793c-0.596-0.636-1.446-1.033-2.387-1.033c-1.806,0-3.27,1.464-3.27,3.27
            c0,0.256,0.029,0.506,0.085,0.745C5.163,5.404,2.753,4.102,1.14,2.124C0.859,2.607,0.698,3.168,0.698,3.767
            c0,1.134,0.577,2.135,1.455,2.722C1.616,6.472,1.112,6.325,0.671,6.08c0,0.014,0,0.027,0,0.041c0,1.584,1.127,2.906,2.623,3.206
            C3.02,9.402,2.731,9.442,2.433,9.442c-0.211,0-0.416-0.021-0.615-0.059c0.416,1.299,1.624,2.245,3.055,2.271
            c-1.119,0.877-2.529,1.4-4.061,1.4c-0.264,0-0.524-0.015-0.78-0.046c1.447,0.928,3.166,1.469,5.013,1.469
            c6.015,0,9.304-4.983,9.304-9.304c0-0.142-0.003-0.283-0.009-0.423C14.976,4.29,15.531,3.714,15.969,3.058z"></path>
          </svg>
        </span>
        <span class="username"></span>
      </a>
      <a href="https://plus.google.com/107410003823545892786" target="_blank">
        <span class="icon gplus">
          <svg class="gplus-icon-svg" enable-background="new 0 0 128 128" height="128px" id="Layer_1" version="1.1" viewBox="0 0 128 128" width="128px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink"><g><circle cx="64" cy="64" fill="#C2C2C2" r="64"></circle><g><g><path d="M49.424,97.875c-19.018,0-34.491-15.193-34.491-33.874c0-18.68,15.473-33.875,34.491-33.875     c8.318,0,16.354,2.952,22.624,8.309l-8.771,9.899c-3.838-3.279-8.758-5.086-13.853-5.086c-11.652,0-21.13,9.31-21.13,20.752     c0,11.441,9.479,20.75,21.13,20.75c9.858,0,16.311-4.723,18.407-13.197H49.587V58.432h32.347v6.562     C81.934,84.659,68.869,97.875,49.424,97.875z" fill="#FFFFFF"></path></g><polygon fill="#FFFFFF" points="117.934,58.438 107.934,58.438 107.934,48.438 99.934,48.438 99.934,58.438 89.934,58.438     89.934,66.438 99.934,66.438 99.934,76.438 107.934,76.438 107.934,66.438 117.934,66.438   "></polygon></g></g>
          </svg>
        </span>
      </a>
    </div>

    <div class="footer-col-3 column">
      <p class="text">Free tutorials for modern Opengl (3.3 and later) in C/C++</p>
    </div>

  </div>

</footer>


    
</body></html>